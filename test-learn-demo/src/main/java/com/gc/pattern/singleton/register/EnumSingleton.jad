// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3)
// Source File Name:   EnumSingleton.java

package com.gc.pattern.singleton.register;

import java.io.*;

public final class EnumSingleton extends Enum
    implements Serializable
{

    public static EnumSingleton[] values()
    {
        return (EnumSingleton[])$VALUES.clone();
    }

    public static EnumSingleton valueOf(String name)
    {
        return (EnumSingleton)Enum.valueOf(com/gc/pattern/singleton/register/EnumSingleton, name);
    }

    private EnumSingleton(String s, int i)
    {
        super(s, i);
    }

    public Object getData()
    {
        return data;
    }

    public void setData(Object data)
    {
        this.data = data;
    }

    public static Object getInstance()
    {
        return INSTANCE;
    }

    public static void main(String args[])
    {
        Object s1 = null;
        Object s2 = getInstance();
        FileOutputStream fos = null;
        try
        {
            fos = new FileOutputStream("EnumSingleton.obj");
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(s2);
            oos.flush();
            oos.close();
            FileInputStream fis = new FileInputStream("EnumSingleton.obj");
            ObjectInputStream ois = new ObjectInputStream(fis);
            s1 = ois.readObject();
            ois.close();
            System.out.println((new StringBuilder()).append("s1->").append(s1).toString());
            System.out.println((new StringBuilder()).append("s2->").append(s2).toString());
            System.out.println((new StringBuilder()).append("s1\u548Cs2\u662F\u5426\u76F8\u7B49->").append(s1 == s2).toString());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public static final EnumSingleton INSTANCE;
    private Object data;
    private static final EnumSingleton $VALUES[];

    //是饿汉式单例,在类加载好之前就在静态代码块中初始化了INSTANCE变量
    static
    {
        INSTANCE = new EnumSingleton("INSTANCE", 0);
        $VALUES = (new EnumSingleton[] {
            INSTANCE
        });
    }
}
